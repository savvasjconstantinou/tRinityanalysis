#install and load required packages- thank you to the package developers!
install.packages("graphics")
install.packages("devtools")
install.packages("cowplot")
install.packages("gridExtra")

library(graphics)
library(devtools)
install_github("ggbiplot", "vqv")
library(ggbiplot)
library(cowplot)
library(gridExtra)

#create file for TP analysis

#merge all data, change col names to be more readable, check
setwd("C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full")
filenames <- list.files(path="C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full")
colnames<-c("BL","EN","GZ.L","GZ.L.cells","GZWA","GZWA.cells","GZWB","GZWB.cells","GZA","LSL","LSL.cells","LSA","TrunkA","GZDAPI","# mit AP","% mit AP","GZpH3")
data<-do.call(rbind, lapply(filenames, function(x) read.csv(x, col.names = colnames, stringsAsFactors = T)))
head(data)

#identify extreme outliers in columns 1-13 without EN or cell length
boxplot(data[,1]~as.factor(data[,2]))
boxplot(data[,3]~as.factor(data[,2]))
boxplot(data[,5]~as.factor(data[,2]))
boxplot(data[,7]~as.factor(data[,2]))
boxplot(as.numeric(data[,9])~as.factor(data[,2]))
boxplot(data[,10]~as.factor(data[,2]))
boxplot(as.numeric(data[,12])~as.factor(data[,2]))
boxplot(as.numeric(data[,13])~as.factor(data[,2]))

#identified 4 misentered values from raw data:
#5 en, BL 0.401 change to 0.41
#5 en, BL, 0.0433 change to 0.433
#10 en, GZWA, 112 change to 0.112
#14 en, LSA, 138 change to 0.00138

#make copies of original data in new folder, make changes,remerge into data called "full", export data
setwd("C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full2")
filename <- list.files(path="C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full2")
colnames<-c("BL","EN","GZ.L","GZ.L.cells","GZWA","GZWA.cells","GZWB","GZWB.cells","GZA","LSL","LSL.cells","LSA","TrunkA","GZDAPI","# mit AP","% mit AP","GZpH3")
full<-do.call(rbind, lapply(filename, function(x) read.csv(x, col.names = colnames)))
write.csv(full, file="full.csv")

#add tagma groupings (see methods for categories), remove column 1 (duplicate of row names), remove "*" on data
full<-read.csv("C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full2/full.csv", header=T, stringsAsFactors =F)

#add +1 to LSL cells (to account for en expressing cell of segment), check data
full$LSL.cells<- as.numeric(full$LSL.cells) + 1
head(full)
str(full)

#how correlated are the cell count and lengths?
cor(full[,3], full[,4], use="complete.obs")
cor(full[,5], full[,6], use="complete.obs")
cor(full[,7], full[,8], use="complete.obs")
cor(full[,10], full[,11], use="complete.obs")

#remove rows where NA are present, exclude dapi, AP oriented and %, pH3, tagma and all cell counts (b/c of high correlation)
nocells<-na.omit(full[,c(1:3,5,7,9,10,12,13)])
str(nocells)

#do PCA, scale and center data. check contribution of each principal component.
myPCAnocell<-prcomp(nocells, scale=TRUE, center=TRUE)
summary(myPCAnocell)
#how important is each component to the PC (absolute value)
myPCAnocell$rotation

#create a vector of the group names
naoutnocell<- full[ , 18]

group<-as.factor(naoutnocell)

ggnocell <- ggbiplot(myPCAnocell, obs.scale=1, var.scale=1, groups=group, 
                     ellipse=TRUE) +
  scale_color_discrete(name='')  +
  theme(legend.position= c(.85,.89)) 
ggnocell

#look at screeplot to determine how many PC to keep for future analysis (if <1 retain; but one should also retain as many PC
#as necessary to explain 80-90% of variance- use summary of myPCA...)
screeplot(myPCAnocell)

#multiple comparisons of PC1, PC2, PC3, and PC4 (to explain >90% variance) by group. If sig p-value in Anova (Type II), than the groups are not the same
nocella<-manova((myPCAnocell$x[,1:3])~group)
summary(nocella)

#how much of the variance of a PC is explained by group? How dissimilar are the groups from each other in the dimension of a PC?
summary( lm( myPCAnocell$x[,1] ~ group) )
summary( lm( myPCAnocell$x[,2] ~ group) )

#PC1 explains 67.5% of the variance in dataset, and 0.738 adj r 2 for tagma separation (all sig different)


