#Tp analysis Tagma level

#install required packages
install.packages("broom")
install.packages("gridExtra")
install.packages("ggplot2")
install.packages("ggsignif")
#load required packages
library(broom)
library(gridExtra)
library(ggplot2)
library(ggsignif)

#load in the dataset and check
full<-read.csv("C:/Users/Savvas Constantinou/Documents/exported csv data for SC/raw data for full2/full.csv", header=T, stringsAsFactors =T)
head(full)
str(full)

#print graphs for supp fig; note that code for analysis is below
#Reorder tagma into biologically relevant categories (from Ant to Posterior)
full$Tagma <- factor(full$Tagma, levels= c("Thor Pre", "Thor Post", "Genital", "Abdominal "))
#produce graphs
p1<-ggplot(full, aes(x=Tagma, y=BL)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Body Length") +
  geom_boxplot(outlier.shape = NA) 
  
p2<-ggplot(full, aes(x=Tagma, y=GZ.L)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust=0.5)) +
  ggtitle("Growth Zone Length") +
  geom_boxplot(outlier.shape = NA) 

p3<-ggplot(full, aes(x=Tagma, y=GZA)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust=0.5)) +
  ggtitle("Growth Zone Area") +
  geom_boxplot(outlier.shape = NA)

p4<-ggplot(full, aes(x=Tagma, y=GZWA)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust=0.5)) +
  ggtitle("Width of Newly Added en Stripe") +
  geom_boxplot(outlier.shape = NA) +
  geom_signif(comparisons= list(c("Thor Pre", "Thor Post"), 
                                c("Thor Pre", "Abdominal "),
                                c("Thor Post", "Abdominal "),
                                c("Genital", "Abdominal ")),
                                step_increase = 0.09,
                                annotations = c("**"="NS."),
                                map_signif_level = TRUE)
              
p5<-ggplot(full, aes(x=Tagma, y=LSL)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust=0.5)) +
  ggtitle("Length of Last Segment Added") +
  geom_boxplot(outlier.shape = NA) +
  geom_signif(comparisons= list(c("Genital", "Thor Post")),
                                annotations = c("*"="NS."),
                                inherit.aes = TRUE,
                                map_signif_level = TRUE)

p6<-ggplot(full, aes(x=Tagma, y=LSA)) +
  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                     panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
  theme(plot.title = element_text(hjust=0.5)) +
  ggtitle("Area of Last Segment") +
  geom_boxplot(outlier.shape = NA) +
  scale_y_continuous(limits=c(0.0008, 0.0035))

#print all 6 graphs in 3 rows and 2 columns (done as 2 separate pdf to preserve graph integrity)
pdf("tagmaAtoD.pdf")
grid.arrange(p1, p2, p3, p4, ncol=2)
dev.off()
pdf("tagmaEF.pdf")
grid.arrange(p5, p6, ncol=2)
dev.off()

#___________________________________________________________________________
#Data analysis
#1

#check BL data against tagma

boxplot(BL~Tagma, data=full, notch=TRUE)

#fit ANOVA model, print the p-value for F-test. If significant, than reject null 
#(that all groups have equal means) accept H1 where the means are not equal
BLaovTag <-aov(full[,1]~Tagma, data=full)
BLaovTagT <- tidy(BLaovTag)
if (BLaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyBLTag<-TukeyHSD(BLaovTag, conf.level = 0.95)
TukeyBLTag<-tidy(TukeyBLTag)
#print the comparisons that are significantly the same, (if output=NULL than all diff)
TukeyBLTag[TukeyBLTag[,6]>0.05,c(2,6)] 

#____________________________________________________________________
#2
#check GZL data against tagma
boxplot(GZ.L~Tagma, data=full, notch=TRUE)

#fit ANOVA model, print the p-value for F-test. If significant, than reject null 
#(that all groups have equal means) accept H1 where the means are not equal
GZLaovTag <-aov(full[,3]~Tagma, data=full)
GZLaovTagT <- tidy(GZLaovTag)
if (GZLaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyGZLTag<-TukeyHSD(GZLaovTag, conf.level = 0.95)
TukeyGZLTag<-tidy(TukeyGZLTag)
#print the comparisons that are significantly the same, (if output=NULL than all diff)
TukeyGZLTag[TukeyGZLTag[,6]>0.05,c(2,6)] 

#______________________________________________________________________________
#3
#check GZ A  data against tagma
boxplot(GZA~Tagma, data=full)

#fit ANOVA model, print the p-value for F-test. 
GZAaovTag <-aov(full[,9]~Tagma, data=full)
GZAaovTagT <- tidy(GZAaovTag)
#see if F-test is significant
if (GZAaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyGZATag<-TukeyHSD(GZAaovTag, conf.level = 0.95)
TukeyGZATag<-tidy(TukeyGZATag)
#print the comparisons that are significantly the same (NOT different from each other), (if output=NULL than all diff)
TukeyGZATag[TukeyGZATag[,6]>0.05,c(2,6)] 

#________________________________________________________________________________
#4
#check GZWA data against tagma
boxplot(GZ.WA~Tagma, data=full)

#fit ANOVA model, print the p-value for F-test. 
GZWAaovTag <-aov(full[,5]~Tagma, data=full)
GZWAaovTagT <- tidy(GZWAaovTag)
#see if F-test is significant
if (GZWAaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyGZWATag<-TukeyHSD(GZWAaovTag, conf.level = 0.95)
TukeyGZWATag<-tidy(TukeyGZWATag)
#print the comparisons that are significantly the same (NOT different from each other), (if output=NULL than all diff)
TukeyGZWATag[TukeyGZWATag[,6]>0.05,c(2,6)] 

#___________________________________________________________________________________
#5
#check Last seg L data against tagma
boxplot(LSL~Tagma, data=full)

#fit ANOVA model, print the p-value for F-test. 
LSLaovTag <-aov(full[,10]~Tagma, data=full)
LSLaovTagT <- tidy(LSLaovTag)
#see if F-test is significant
if (LSLaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyLSLTag<-TukeyHSD(LSLaovTag, conf.level = 0.95)
TukeyLSLTag<-tidy(TukeyLSLTag)
#print the comparisons that are significantly the same (NOT different from each other), (if output=NULL than all diff)
TukeyLSLTag[TukeyLSLTag[,6]>0.05,c(2,6)] 

#____________________________________________________________________________________
#6
#check Last seg A data against tagma
boxplot(LSA~Tagma, data=full)

#fit ANOVA model, print the p-value for F-test. 
LSAaovTag <-aov(full[,12]~Tagma, data=full)
LSAaovTagT <- tidy(LSAaovTag)
#see if F-test is significant
if (LSAaovTagT$p.value[1]>0.05){
  print("the means are not different from each other; they are equal")
}else{
  print("the means are different from each other; they are not equal")
}

#run multiple comparisons using tukey HSD with conf of 95%
TukeyLSATag<-TukeyHSD(LSAaovTag, conf.level = 0.95)
TukeyLSATag<-tidy(TukeyLSATag)
#print the comparisons that are significantly the same (NOT different from each other), (if output=NULL than all diff)
TukeyLSATag[TukeyLSATag[,6]>0.05,c(2,6)] 
